{"version":3,"sources":["webpack:///./src/pages/404.js","webpack:///./src/gatsby/components/seo.js","webpack:///./src/gatsby/components/header.js","webpack:///./src/gatsby/components/layout.js"],"names":["__webpack_require__","r","__webpack_exports__","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_gatsby_components_layout__WEBPACK_IMPORTED_MODULE_1__","_gatsby_components_seo__WEBPACK_IMPORTED_MODULE_2__","NotFoundPage","a","createElement","title","SEO","_ref","description","lang","meta","site","_public_static_d_2417117884_json__WEBPACK_IMPORTED_MODULE_0__","data","metaDescription","siteMetadata","react__WEBPACK_IMPORTED_MODULE_1___default","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","name","content","property","author","concat","defaultProps","propTypes","PropTypes","string","arrayOf","object","isRequired","Header","siteTitle","react_default","style","background","marginBottom","margin","maxWidth","padding","gatsby_browser_entry","to","color","textDecoration","Layout","children","query","render","Fragment","header","paddingTop","Date","getFullYear","href","_755544856","node"],"mappings":"0FAAAA,EAAAC,EAAAC,GAAA,IAAAC,EAAAH,EAAA,GAAAI,EAAAJ,EAAAK,EAAAF,GAAAG,EAAAN,EAAA,KAAAO,EAAAP,EAAA,KAaeQ,UARM,kBACnBJ,EAAAK,EAAAC,cAACJ,EAAA,EAAD,KACEF,EAAAK,EAAAC,cAACH,EAAA,EAAD,CAAKI,MAAM,mBACXP,EAAAK,EAAAC,cAAA,uBACAN,EAAAK,EAAAC,cAAA,gQCGJ,SAASE,EAATC,GAAiD,IAAlCC,EAAkCD,EAAlCC,YAAaC,EAAqBF,EAArBE,KAAMC,EAAeH,EAAfG,KAAML,EAASE,EAATF,MAC9BM,EADuCC,EAAAC,KACvCF,KAcFG,EAAkBN,GAAeG,EAAKI,aAAaP,YAEzD,OACEQ,EAAAb,EAAAC,cAACa,EAAAd,EAAD,CACEe,eAAgB,CACdT,QAEFJ,MAAOA,EACPc,cAAa,QAAUR,EAAKI,aAAaV,MACzCK,KAAM,CACJ,CACEU,KAAI,cACJC,QAASP,GAEX,CACEQ,SAAQ,WACRD,QAAShB,GAEX,CACEiB,SAAQ,iBACRD,QAASP,GAEX,CACEQ,SAAQ,UACRD,QAAO,WAET,CACED,KAAI,eACJC,QAAO,WAET,CACED,KAAI,kBACJC,QAASV,EAAKI,aAAaQ,QAE7B,CACEH,KAAI,gBACJC,QAAShB,GAEX,CACEe,KAAI,sBACJC,QAASP,IAEXU,OAAOd,KAKfJ,EAAImB,aAAe,CACjBhB,KAAI,KACJC,KAAM,GACNF,YAAW,IAGbF,EAAIoB,UAAY,CACdlB,YAAamB,IAAUC,OACvBnB,KAAMkB,IAAUC,OAChBlB,KAAMiB,IAAUE,QAAQF,IAAUG,QAClCzB,MAAOsB,IAAUC,OAAOG,YAGXzB,uPCnFT0B,EAAS,SAAAzB,GAAA,IAAG0B,EAAH1B,EAAG0B,UAAH,OACbC,EAAA/B,EAAAC,cAAA,UACE+B,MAAO,CACLC,WAAU,gBACVC,aAAY,YAGdH,EAAA/B,EAAAC,cAAA,OACE+B,MAAO,CACLG,OAAM,SACNC,SAAU,IACVC,QAAO,sBAGTN,EAAA/B,EAAAC,cAAA,MAAI+B,MAAO,CAAEG,OAAQ,IACnBJ,EAAA/B,EAAAC,cAACqC,EAAA,KAAD,CACEC,GAAG,IACHP,MAAO,CACLQ,MAAK,QACLC,eAAc,SAGfX,OAOXD,EAAON,UAAY,CACjBO,UAAWN,IAAUC,QAGvBI,EAAOP,aAAe,CACpBQ,UAAS,IAGID,QC3BTa,UAAS,SAAAtC,GAAA,IAAGuC,EAAHvC,EAAGuC,SAAH,OACbZ,EAAA/B,EAAAC,cAACqC,EAAA,YAAD,CACEM,MAAK,YASLC,OAAQ,SAAAnC,GAAI,OACVqB,EAAA/B,EAAAC,cAAA8B,EAAA/B,EAAA8C,SAAA,KACEf,EAAA/B,EAAAC,cAAC8C,EAAD,CAAQjB,UAAWpB,EAAKF,KAAKI,aAAaV,QAC1C6B,EAAA/B,EAAAC,cAAA,OACE+B,MAAO,CACLG,OAAM,SACNC,SAAU,IACVC,QAAO,wBACPW,WAAY,IAGdjB,EAAA/B,EAAAC,cAAA,YAAO0C,GACPZ,EAAA/B,EAAAC,cAAA,oBACK,IAAIgD,MAAOC,cADhB,mBAGEnB,EAAA/B,EAAAC,cAAA,KAAGkD,KAAK,4BAAR,cAzBVzC,KAAA0C,MAiCFV,EAAOnB,UAAY,CACjBoB,SAAUnB,IAAU6B,KAAKzB,YAGZc","file":"component---src-pages-404-js-f3c43a9c4518f187d739.js","sourcesContent":["import React from \"react\"\n\nimport Layout from \"../gatsby/components/layout\"\nimport SEO from \"../gatsby/components/seo\"\n\nconst NotFoundPage = () => (\n  <Layout>\n    <SEO title=\"404: Not found\" />\n    <h1>NOT FOUND</h1>\n    <p>You just hit a route that doesn&#39;t exist... the sadness.</p>\n  </Layout>\n)\n\nexport default NotFoundPage\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Helmet from \"react-helmet\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nfunction SEO({ description, lang, meta, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.author,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ].concat(meta)}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  description: ``,\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n","import { Link } from \"gatsby\"\nimport PropTypes from \"prop-types\"\nimport React from \"react\"\n\nconst Header = ({ siteTitle }) => (\n  <header\n    style={{\n      background: `rebeccapurple`,\n      marginBottom: `1.45rem`,\n    }}\n  >\n    <div\n      style={{\n        margin: `0 auto`,\n        maxWidth: 960,\n        padding: `1.45rem 1.0875rem`,\n      }}\n    >\n      <h1 style={{ margin: 0 }}>\n        <Link\n          to=\"/\"\n          style={{\n            color: `white`,\n            textDecoration: `none`,\n          }}\n        >\n          {siteTitle}\n        </Link>\n      </h1>\n    </div>\n  </header>\n)\n\nHeader.propTypes = {\n  siteTitle: PropTypes.string,\n}\n\nHeader.defaultProps = {\n  siteTitle: ``,\n}\n\nexport default Header\n","/**\n * Layout component that queries for data\n * with Gatsby's StaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { StaticQuery, graphql } from \"gatsby\"\n\nimport Header from \"./header\"\nimport \"./layout.css\"\n\nconst Layout = ({ children }) => (\n  <StaticQuery\n    query={graphql`\n      query SiteTitleQuery {\n        site {\n          siteMetadata {\n            title\n          }\n        }\n      }\n    `}\n    render={data => (\n      <>\n        <Header siteTitle={data.site.siteMetadata.title} />\n        <div\n          style={{\n            margin: `0 auto`,\n            maxWidth: 960,\n            padding: `0px 1.0875rem 1.45rem`,\n            paddingTop: 0,\n          }}\n        >\n          <main>{children}</main>\n          <footer>\n            Â© {new Date().getFullYear()}, Built with\n            {` `}\n            <a href=\"https://www.gatsbyjs.org\">Gatsby</a>\n          </footer>\n        </div>\n      </>\n    )}\n  />\n)\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n"],"sourceRoot":""}